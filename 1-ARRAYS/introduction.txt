XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                A R R A Y S - V E C T O R S              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

1) What is an Array?

- Defination     : A contiguous block of memory that holds elements of the same type.
- Indexing       : Zero-based indexing , the first element is at index 0, last index is n-1.
- Memory Layout  : Elements are laid out back-to-back in RAM, so pointer arithematic applies (arr + 1) etc.

  Declaration Syntax - data_type array_variable_name[array_size];

2) Dynamic Arrays using Vectors

- Declaration Syntax - vector<data_type> variable_name;


3) Time and Space complexity

	operation                         time                           extra space 
	
	Access                            O(1)                           O(1)
	Traversal                         O(n)                           O(1)
	Insertion/Deletion                O(n)                           O(1)
	Sorting(std::sort)                O(nlogn)                       O(logn)
	Searching                         O(n)                           O(1)
	Binary Search                     O(logn)                        O(1)


4) Problems

   - Basic Problems
	
     [X] - Print Alternates
     [X] - Linear Search
     [X] - Largest Element
     [X] - Second Largest
     [X] - Largest Three
     [X] - Leaders in an array
     [X] - Check if Sorted
     [X] - Remove Duplicates from Sorted
     [] - Generate all Subarrays
     [X] - Reverse an Array
     [] - Rotate an Array
     [] - Zeroes to End
     [] - Min Increments to Make Equal
     [] - Min Cost to Make Size 1

   - Easy Problems on Array

     [] - Distinct Elements
     [] - Duplicate within K Distance
     [] - Make Even Positioned Greater
     [] - Sum of all Subarrays
     [] - Stock Buy and Sell â€“ Multiple Transactions
     [] - Single Among Doubles
     [] - Missing Number
     [] - Missing and Repeating
     [] - Only Repeating from 1 to n-1
     [] - Sorted Subsequence of Size 3
     [] - Binary Sort
     [] - Stable Binary Sort
     [] - Stable Binary Sort with O(1) Space
     [] - Sort in Wave Form
     [] - Max Subarray Sum
     [] - K Concatenation Max Subarray Sum
     [] - Max Subarray Product
     [] - Equilibrium index
     [] - Two Sum - Find if there is a Pair
     [] - Two Sum - Closest Pair
     [] - Chocolate Distribution Problem
     [] - Union of two arrays
     [] - Intersection of two arrays
     [] - Union of two sorted arrays
     [] - Intersection of two sorted arrays

   - Medium Problems on Array

    [] - Make arr[i] = i
    [] - Sort an array of 1 to n
    [] - Reorder according to given indexes
    [] - Minimum Swaps to Sort
    [] - Min in a Sorted Rotated
    [] - Max in a Sorted Rotated
    [] - Rotation Count in Rotated Sorted
    [] - Search in a Sorted Rotated
    [] - Nearly Sorted (or K sorted)
    [] - Product Except Self
    [] - K-th Largest Sum Subarray
    [] - Smallest missing number
    [] - Smallest subarray with sum greater than x
    [] - Inversion count
    [] - Merge Overlapping Intervals
    [] - Sort an array of 0s, 1s and 2s
    [] - Merge with O(1) extra space
    [] - Majority Element
    [] - Peak element
    [] - Count possible triangles
    [] - Sub-array with given sum
    [] - Longest Subarray with Equal 0s and 1s
    [] - Longest Common Span in Two Binary Arrays
    [] - Construct an array from its pair-sum array
    [] - 2 Sum - All Pairs
    [] - 2 Sum - Distinct Pairs
    [] - 3 Sum - Find Any
    [] - 3 Sum - Closest Triple
    [] - 4 Sum - Find Many More problems on 4 Sum in Hard Section


  - Hard Problems on Array
	
    [] - Surpasser Count
    [] - Trapping Rain Water
    [] - Top K Frequent Elements
    [] - Kth Missing Positive Number in a Sorted Array
    [] - Stock Buy and Sell - At Most K Transactions
    [] - Stock Buy and Sell - At Most 2 Transactions
    [] - Median in a Stream
    [] - Smallest Difference Triplet from 3 arrays
    [] - Max occurred in n ranges
    [] - 3 Sum - Distinct Triplets
    [] - 3 Sum - All Triplets
    [] - 4 Sum - Distinct Quadruples
    [] - 4 Sum - All Quadruples
    [] - 4 Sum - Closest Quadruple



     
